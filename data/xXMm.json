{"name":"xXMm","title":"[library] WebCam","description":"<div class=\"markdown\"><p>2012/9/24 &#x306B; CoffeeScript &#x306B;&#x5DEE;&#x3057;&#x66FF;&#x3048;</p>\n</div>","libraries":[],"js":{"language":"coffeescript","content":"class window.WebCam\n  constructor: (playCallback, failCallback) ->\n    userMedia = navigator.getUserMedia or navigator.webkitGetUserMedia\n    if not userMedia\n      return failCallback?()\n    \n    @video = document.createElement('video')\n    @video.addEventListener('canplay', => @video.play())\n    @video.addEventListener('timeupdate', =>\n      @width = @video.videoWidth\n      @height = @video.videoHeight\n      if @width or @height\n        @video.removeEventListener('timeupdate', arguments.callee, false)\n        playCallback?()\n    , false)\n    setSourceURL = (src) =>\n      url = window.URL or window.webkitURL\n      @video.src = if url then url.createObjectURL(src) else src\n    \n    try\n      userMedia.call(navigator, video: true, setSourceURL, failCallback)\n    catch e\n      userMedia.call(navigator, 'video', setSourceURL, failCallback)"},"html":{"language":"html","content":""},"css":{"language":"css","content":""},"published":"2012-10-25T20:24:50"}