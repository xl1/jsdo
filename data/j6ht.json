{"name":"j6ht","title":"水面の高さ","description":"<div class=\"markdown\"><ul>\n<li>&#x6C34;&#x9762;&#x306E;&#x9AD8;&#x3055;</li>\n<li>&#x30DE;&#x30A6;&#x30B9;&#x3092;&#x52D5;&#x304B;&#x3059;&#x3068;&#x6CE2;&#x304C;&#x51FA;&#x308B;</li>\n<li><p>&#x3053;&#x306E;&#x304F;&#x3089;&#x3044;&#x306E;&#x30B5;&#x30A4;&#x30BA;&#x306A;&#x3089;&#x3044;&#x3044;&#x3051;&#x3069;&#x3001;512px &#x306B;&#x3059;&#x308B;&#x3068;&#x7E01;&#x4EE5;&#x5916;&#x306E;&#x5168;&#x4F53;&#x304C; 0 &#xFF08;&#x771F;&#x3063;&#x9ED2;&#xFF09;&#x307E;&#x305F;&#x306F; 1 &#xFF08;&#x771F;&#x3063;&#x30B7;&#x30A2;&#x30F3;&#xFF09;&#x306B;&#x53CE;&#x675F;&#x3057;&#x3066;&#x3057;&#x307E;&#x3046;&#x3053;&#x3068;&#x304C;&#x3042;&#x308B;</p></li>\n<li><p><strong>2013/06/21</strong> Firefox &#x3067;&#x306F;&#x4E00;&#x77AC;&#x3067;&#x771F;&#x3063;&#x30B7;&#x30A2;&#x30F3;&#x306B;&#x306A;&#x3063;&#x3066;&#x3044;&#x308B;&#x3053;&#x3068;&#x306B;&#x6C17;&#x304C;&#x3064;&#x3044;&#x305F;&#x306E;&#x3067;&#x5F8C;&#x3067;&#x691C;&#x8A3C;&#x3057;&#x307E;&#x3059;</p></li>\n</ul>\n</div>","libraries":["/xl1/eHqL"],"js":{"language":"coffeescript","content":"# shaders\nvshader = '''\n  attribute vec2 position;\n  void main(){\n    gl_Position = vec4(position, 0.0, 1.0);\n  }\n'''\n\nfshader =\n  velocity: '''\n    precision mediump float;\n    uniform float size;\n    uniform sampler2D velocity;\n    uniform sampler2D height;\n\n    float ht(float x, float y){\n      vec2 ref = (gl_FragCoord.xy + vec2(x, y)) / size;\n      return texture2D(height, ref).z - 0.5;\n    }\n    float vel(){\n      vec2 ref = gl_FragCoord.xy / size;\n      return texture2D(velocity, ref).z - 0.5;\n    }\n    void main(){\n      float result = 0.5 + vel() + 0.04 * (\n        ht(-1.0, 0.0) + ht(0.0, -1.0) +\n        ht(0.0, 1.0) + ht(1.0, 0.0) - 4.0 * ht(0.0, 0.0)\n      );\n      gl_FragColor = vec4(0.0, result, result, 1.0);\n    }\n  '''\n  height: '''\n    precision mediump float;\n    uniform vec2 mouse;\n    uniform float size;\n    uniform sampler2D velocity;\n    uniform sampler2D height;\n\n    void main(){\n      vec2 ref = gl_FragCoord.xy / size;\n      float ht = texture2D(height, ref).z - 0.5;\n      float vel = texture2D(velocity, ref).z - 0.5;\n      float result = distance(mouse, gl_FragCoord.xy) < 1.0\n        ? 1.0\n        : 0.5 + ht + vel;\n      gl_FragColor = vec4(0.0, result, result, 1.0);\n    }\n  '''\n\n# global variables\ngl = new MicroGL(antialias: false)\nmouse = { x:0, y:0 }\nprogram = {}\nconstant = null\nvelocity = null\nheight = null\nsize = 256\n\nmain = ->\n  gl.init(document.body, size, size)\n\n  # initialize programs\n  program.velocity = gl.makeProgram(vshader, fshader.velocity)\n  program.height = gl.makeProgram(vshader, fshader.height)\n  \n  # initialize framebuffers\n  velocity = gl.frame()\n  height = gl.frame()\n  gl.program(vshader, 'precision mediump float;void main(){gl_FragColor=vec4(vec3(.5),1.);}')\n    .bindVars(position: [-1, -1, -1, 1, 1, -1, 1, 1])\n    .drawFrame(velocity)\n    .drawFrame(height)\n\n  # constants\n  d = 1 - 2 / size\n  constant = gl.program(program.height).variable(\n    position: [-d, -d, -d, d, d, -d, d, d]\n    size: size\n  )\n    \n  gl.gl.canvas.addEventListener 'mousemove', (e) ->\n    mouse.x = e.offsetX\n    mouse.y = size - e.offsetY\n  , false\n\n  update()\n\nupdate = ->\n  gl.program(program.velocity)\n    .bind(constant)\n    .bindVars(\n      velocity: velocity.color\n      height: height.color\n    )\n    .drawFrame(velocity)\n    .program(program.height)\n    .bind(constant)\n    .bindVars(\n      mouse: [mouse.x, mouse.y]\n      velocity: velocity.color\n      height: height.color\n    )\n    .drawFrame(height)\n    .draw()\n\n  requestAnimationFrame update\n\nmain()"},"html":{"language":"html","content":""},"css":{"language":"css","content":""},"published":"2013-06-21T10:23:22"}