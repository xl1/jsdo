{"name":"8YIL","title":"Chrome で AR してみる","description":"<div class=\"markdown\"><p><code>getUserMedia()</code> &#x3067;&#x30AB;&#x30E1;&#x30E9;&#x306E;&#x6620;&#x50CF;&#x3092;&#x53D6;&#x5F97; &#x2192; WebGL &#x3067; 3D &#x30E2;&#x30C7;&#x30EB;&#x3092;&#x8868;&#x793A;</p>\n\n<p><img alt=\"&#x8868;&#x793A;&#x30B5;&#x30F3;&#x30D7;&#x30EB;\" src=\"http://dl.dropbox.com/u/9127339/static/jsdoit/machunepic.jpg\"></p>\n\n<p>&#x30DE;&#x30FC;&#x30AB;&#x30FC;\n<img alt=\"&#x30DE;&#x30FC;&#x30AB;&#x30FC;\" src=\"./assets/jlrT5.gif\"></p>\n\n<p>&#x4E0B;&#x306E; QR &#x30B3;&#x30FC;&#x30C9;&#x304B;&#x3089;&#x643A;&#x5E2F;&#x306A;&#x3069;&#x3067;&#x30A2;&#x30AF;&#x30BB;&#x30B9;&#x3059;&#x308B;&#x3068;&#x3001;&#x30DE;&#x30FC;&#x30AB;&#x30FC;&#x304C;&#x8868;&#x793A;&#x3055;&#x308C;&#x308B;&#x306E;&#x3067;&#x7C21;&#x5358;&#x3068;&#x304A;&#x3082;&#x3044;&#x307E;&#x3059;</p>\n\n<ul>\n<li>&#x753B;&#x50CF;&#x304B;&#x3089;&#x30DE;&#x30FC;&#x30AB;&#x30FC;&#x5207;&#x308A;&#x3060;&#x3059;&#x90E8;&#x5206;&#x306F; <a href=\"http://code.google.com/p/js-aruco/\">js-aruco</a> &#x3092;&#x4F7F;&#x3063;&#x3066;&#x3044;&#x307E;&#x3059;</li>\n<li>3D &#x30E2;&#x30C7;&#x30EB;&#x306F; <a href=\"http://blog.r3c7.net/?p=121\">http://blog.r3c7.net/?p=121</a> &#x304B;&#x3089;&#x9802;&#x3044;&#x305F; Collada&#x30D5;&#x30A1;&#x30A4;&#x30EB;&#x3092;\nBlender &#x3067; obj &#x30D5;&#x30A1;&#x30A4;&#x30EB;&#x306B;&#x5909;&#x63DB;&#x3057;&#x3066; <a href=\"https://gist.github.com/4049600\">https://gist.github.com/4049600</a> &#x3067; JSON &#x306B;&#x5909;&#x63DB;&#x3057;&#x307E;&#x3057;&#x305F;</li>\n<li>&#x30C6;&#x30AF;&#x30B9;&#x30C1;&#x30E3;&#x753B;&#x50CF;&#x304C;&#x305D;&#x306E;&#x307E;&#x307E;&#x3067;&#x306F;&#x5927;&#x304D;&#x304B;&#x3063;&#x305F;&#x306E;&#x3067; PNG8 &#x306B;&#x5727;&#x7E2E;&#x3057;&#x3066;&#x3044;&#x307E;&#x3059;</li>\n</ul>\n\n<h3>2012/9/24 &#x8FFD;&#x8A18;</h3>\n\n<ul>\n<li>7&#x6708;&#x672B;&#x306B; Chrome stable 21 &#x306B; <code>getUserMedia()</code> &#x8F09;&#x308A;&#x307E;&#x3057;&#x305F;</li>\n<li>&#x30B3;&#x30FC;&#x30C9;&#x3092; CoffeeScript &#x306B;&#x5DEE;&#x3057;&#x66FF;&#x3048;&#x307E;&#x3057;&#x305F;</li>\n<li>README &#x3092; markdown &#x306B;&#x3057;&#x3066;&#x3044;&#x308D;&#x3044;&#x308D;&#x66F8;&#x304D;&#x63DB;&#x3048;&#x307E;&#x3057;&#x305F;</li>\n</ul>\n\n<h3>2012/10/19 &#x8FFD;&#x8A18;</h3>\n\n<ul>\n<li><code>texImage2D</code> &#x3067; &apos;no video&apos; &#x3068;&#x3044;&#x3046;&#x30A8;&#x30E9;&#x30FC;&#x304C;&#x51FA;&#x308B;&#x3053;&#x3068;&#x304C;&#x3042;&#x308B;</li>\n<li><code>video.videoWidth, video.videoHeight</code> &#x304C;&#x3068;&#x308C;&#x306A;&#x3044;&#xFF08;0 &#x306B;&#x306A;&#x308B;&#xFF09;&#x3053;&#x3068;&#x304C;&#x3042;&#x308B;&#x304C;&#x3001;&#x4E00;&#x4F53;&#x3069;&#x306E;&#x30BF;&#x30A4;&#x30DF;&#x30F3;&#x30B0;&#x306A;&#x3089;&#x78BA;&#x5B9F;&#x306B;&#x53D6;&#x308C;&#x308B;&#x306E;&#x304B;&#x308F;&#x304B;&#x308A;&#x307E;&#x305B;&#x3093;&#x3001;&#x6559;&#x3048;&#x3066;&#x304F;&#x3060;&#x3055;&#x3044;</li>\n</ul>\n\n<h3>2013/03/18</h3>\n\n<ul>\n<li>MicroGL &#x306E;&#x4ED5;&#x69D8;&#x5909;&#x66F4;&#x306B;&#x3088;&#x308B;&#x4FEE;&#x6B63;</li>\n</ul>\n</div>","libraries":["/xl1/645e","/xl1/wgJ4","/xl1/eHqL","/xl1/xXMm"],"js":{"language":"coffeescript","content":"#! coffeescript \nIDMAT4 = -> [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n\nmikuTexture = '../assets/v6IU3.png'\nmikuModel = '../data/jlbs.js'\nmarkerImage = '../assets/jlrT5.gif'\n\n### variables ###\nperspective = IDMAT4()\nglWidth = glHeight = 0\n\nvideoModel = {}\n#cubeModel = {}\nmodels = []\n\ngl = webcam = detector = null\n\n\n### 3次元ベクトル ###\nclass Vec3\n  constructor: (@x, @y, @z) ->\n  copy: -> new Vec3(@x, @y, @z)\n  add: (v) -> new Vec3(@x + v.x, @y + v.y, @z + v.z)\n  mul: (a) -> new Vec3(@x * a, @y * a, @z * a)\n  sub: (v) -> @add(v.mul(-1))\n  dot: (v) -> @x * v.x + @y * v.y + @z * v.z\n  cross: (v) -> new Vec3(\n    @y * v.z - @z * v.y,\n    @z * v.x - @x * v.z,\n    @x * v.y - @y * v.x\n  )\n  len: -> Math.sqrt(@.dot(@))\n  normalize: -> if l = @len() then @.mul(1/l) else @.copy()\n  toArray: -> [@x, @y, @z]\n  toString: -> 'Vec3(' + @toArray().join(', ') + ')'\n\n\nmakeTransformMatrix = (origin, ex, ey, ez) ->\n  [\n    a, b, c, d\n    e, f, g, h\n    i, j, k, l\n  ] = [\n    ex.x, ey.x, ez.x, origin.x\n    ex.y, ey.y, ez.y, origin.y\n    ex.z, ey.z, ez.z, origin.z\n  ]\n  [\n    a-d, e-h, i-l, 0\n    b-d, f-h, j-l, 0\n    c-d, g-h, k-l, 0\n      d,   h,   l, 1\n  ]\n\n\nmakeModelViewMatrix = (fovx, width, height, corners) ->\n  depth = 0.5 * width / Math.tan(fovx / 360 * Math.PI)\n\n  projected = (jx, jy) -> new Vec3(\n    jx - width / 2,\n    jy - height / 2,\n    -depth\n  )\n\n  proj = (projected(j.x, j.y) for j in corners)\n  normalTop    = proj[0].cross(proj[1])\n  normalRight  = proj[1].cross(proj[2])\n  normalBottom = proj[2].cross(proj[3])\n  normalLeft   = proj[3].cross(proj[0])\n\n  markerAX = normalTop.cross(normalBottom).normalize()\n  markerAY = normalLeft.cross(normalRight).normalize()\n  markerAZ = markerAX.cross(markerAY).normalize()\n\n  det   = normalTop.z\n  rate1 = proj[0].x * markerAX.y - proj[0].y * markerAX.x\n  rate0 = proj[1].x * markerAX.y - proj[1].y * markerAX.x  \n  p0 = proj[0].mul(-rate0 / det)\n  p1 = proj[1].mul(-rate1 / det)\n  p2 = p0.add(markerAY)\n  q0 = p0.add(markerAZ.mul(-1))\n  \n  makeTransformMatrix(p0, p1, p2, q0)\n\n\nmakePerspective = (fovx, aspect, near, far) ->\n  width  = 2 * near * Math.tan(fovx * Math.PI / 360)\n  height = width / aspect;\n  x = 2 * near / width\n  y = 2 * near / height\n  z = (near + far) / (near - far)\n  p = 2 * near * far / (near - far)\n  [\n    x, 0, 0, 0,\n    0, y, 0, 0,\n    0, 0, z, -1,\n    0, 0, p, 0\n  ]\n\n\n# utilities\n\n$ = (i) -> document.getElementById(i)\n\nget = (url, callback) ->\n  xhr = new XMLHttpRequest()\n  xhr.open('GET', url, true)\n  xhr.onload = -> callback(xhr.responseText)\n  xhr.send()\n  \n  \n### マーカーを表示する ###\nshowMarker = ->\n  img = document.createElement('img')\n  img.src = markerImage\n  img.onload = -> document.body.appendChild(img)\n  \n  \n### モデルつくる ###\nloadModels = (data) ->\n  (gl.variable {\n    uSampler:  mikuTexture\n    aPosition: d.position\n    aTexCoord: d.texCoord\n    INDEX:     d.index\n  } for d in data)\n\n\n### 毎フレーム呼ばれる ###\nupdate = ->\n  gl.clear()\n  gl.bindVars {\n    uSampler: webcam.video\n  }\n  gl.bind(videoModel)\n  gl.draw()\n  \n  markers = detector.detect {\n    data: gl.read()\n    width: glWidth\n    height: glHeight\n  }\n  for marker in markers\n    gl.bindVars {\n      uPerspective: perspective\n      uModelView: makeModelViewMatrix(60, glWidth, glHeight, marker.corners)\n    }\n    for m in models\n      gl.bind(m)\n      gl.draw()\n  requestAnimationFrame(update)\n\n\n### gl を初期化して update を呼ぶ ###\ninit = ->\n  glWidth  = 400\n  glHeight = 400 * webcam.height / webcam.width |0\n  perspective = makePerspective(60, glWidth / glHeight, 0.1, 100)\n  \n  gl.init(document.body, glWidth, glHeight)\n  requestAnimationFrame(update)\n\n\nmain = ->\n  gl = new MicroGL()\n  if not gl.enabled\n    return showMarker()\n  gl.program($('vshader').textContent, $('fshader').textContent)\n\n  webcam = new WebCam(init, showMarker)\n\n  detector = new AR.Detector()\n\n  videoModel = gl.variable {\n    uPerspective: IDMAT4()\n    uModelView:   IDMAT4()\n    aPosition:    [-1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1]\n    aTexCoord:    [0, 0, 0, 1, 1, 0, 1, 1]\n    INDEX:        null\n  }\n  get(mikuModel, (text) ->\n    models = loadModels(JSON.parse(text))\n  )\n  \n\nmain()"},"html":{"language":"html","content":"<script type=\"text/x-vertex-shader\" id=\"vshader\">\nuniform   mat4 uPerspective;\nuniform   mat4 uModelView;\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nvarying   vec2 vTexCoord;\n\nvoid main(){\n  vec4 position = uModelView * vec4(aPosition.xyz, 1.0);\n  gl_Position = uPerspective * vec4(position.xyz, 1.0);\n  vTexCoord = aTexCoord;\n}\n</script>\n<script type=\"text/x-fragment-shader\" id=\"fshader\">\nprecision mediump float;\n\nuniform sampler2D uSampler;\nvarying vec2 vTexCoord;\n\nvoid main(){\n  vec4 color = texture2D(uSampler, vTexCoord);\n  if(color.a < 1.0){\n    discard;\n  } else {\n    gl_FragColor = color;\n  }\n}\n</script>"},"css":{"language":"css","content":""},"published":"2013-03-18T19:44:47"}