{"name":"yHSq","title":"ボールが跳ねる","description":"<div class=\"markdown\"><ul>\n<li>Chrome for Android beta &#x3067; <code>navigator.vibrate(&#x30DF;&#x30EA;&#x79D2;&#x6570;)</code> &#x304C;&#x4F7F;&#x3048;&#x308B;&#x3088;&#x3046;&#x306B;&#x306A;&#x3063;&#x3066;&#x305F;&#x306E;&#x3067;</li>\n<li>&#x30BF;&#x30C3;&#x30C1;&#x3067;&#x30DC;&#x30FC;&#x30EB;&#x3092;&#x5897;&#x3084;&#x3059;</li>\n<li><p><strong>&#x66F4;&#x65B0;</strong> Firefox &#x3067;&#x306F; deviceorientation &#x306E; beta, gamma &#x306E;&#x5411;&#x304D;&#x304C;&#x9006;&#x306A;&#x306E;&#x3067;&#x305D;&#x308C;&#x306B;&#x5BFE;&#x5FDC;&#x3057;&#x305F;</p></li>\n<li><p><strong>2014/7/2</strong> &#x4E0A;&#x8A18; Firefox &#x306E;&#x5411;&#x304D;&#x3044;&#x3064;&#x306E;&#x9593;&#x306B;&#x304B;&#x76F4;&#x3063;&#x3066;&#x3044;&#x305F;&#x306E;&#x3067;&#x4FEE;&#x6B63;&#x3057;&#x307E;&#x3057;&#x305F;</p></li>\n</ul>\n</div>","libraries":[],"js":{"language":"coffeescript","content":"ctx = null\nballs = []\ngravity = { x: 0, y: 0 }\nlast = 0\n\nclass Ball\n  constructor: (@x, @y) ->\n    @vx = @vy = 0\n    @size = 10\n\n  move: (t) ->\n    dt = t * 0.1\n    { width, height } = ctx.canvas\n    size = @size\n    @vx += gravity.x * dt\n    @vy += gravity.y * dt\n    px = @x + @vx\n    py = @y + @vy\n    if px < size or width - size < px\n      @vx *= -0.7\n      reflect = Math.abs(@vx)\n    if py < @size or height - size < py\n      @vy *= -0.7\n      reflect = Math.abs(@vy)\n    @x += @vx\n    @y += @vy\n    reflect or 0\n\n  render: ->\n    ctx.beginPath()\n    ctx.arc(@x, @y, @size, 0, Math.PI * 2)\n    ctx.fill();\n\n\nupdate = ->\n  t = Date.now() - last\n  last += t\n  if t > 1000\n    t = 0\n\n  reflect = 0\n  for ball in balls\n    reflect += ball.move(t)\n  { width, height } = ctx.canvas\n  ctx.clearRect(0, 0, width, height)\n  for ball in balls\n    ball.render()\n  if reflect > 7\n    navigator.vibrate?(Math.min(60, reflect))\n  requestAnimationFrame(update)\n\n\nmain = ->\n  canv = document.createElement('canvas')\n  canv.width = window.innerWidth\n  canv.height = window.innerHeight\n  document.body.appendChild(canv)\n  ctx = canv.getContext('2d')\n  ctx.fillStyle = 'black'\n\n  window.addEventListener 'deviceorientation', ({ beta, gamma }) ->\n    gravity.y = Math.sin(beta * Math.PI / 180)\n    gravity.x = Math.sin(gamma * Math.PI / 180)\n  , false\n\n  canv.addEventListener 'touchstart', (e) ->\n    e.preventDefault()\n    { clientX, clientY } = e.changedTouches[0]\n    balls.push new Ball(clientX, clientY)\n  , false\n  balls.push new Ball(canv.width / 2, canv.height / 2)\n\n  last = Date.now()\n  update()\n    \nmain()"},"html":{"language":"html","content":""},"css":{"language":"css","content":"body { margin: 0; overflow: hidden; }"},"published":"2014-07-02T23:29:57"}