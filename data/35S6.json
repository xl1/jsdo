{"name":"35S6","title":"WebGL ライブラリ 3 つ","description":"<div class=\"markdown\"><p><a href=\"http://mrdoob.github.com/three.js/\">three.js</a> &#x3068; <a href=\"http://greweb.fr/glsl.js/examples/\">glsl.js</a> &#x306E;&#x6BD4;&#x8F03;&#x3002;\n&#x3064;&#x3044;&#x3067;&#x306B; <a href=\"https://github.com/xl1/microgl\">MicroGL</a> &#x3082;</p>\n\n<p>three.js &#x306F;&#x306A;&#x3093;&#x3067;&#x3082;&#x3067;&#x304D;&#x308B;&#x3051;&#x3069;&#x3001;&#x305F;&#x3060;&#x5C0F;&#x3055;&#x306A;&#x30B7;&#x30A7;&#x30FC;&#x30C0;&#x8A66;&#x3057;&#x305F;&#x3044;&#x3068;&#x304D;&#x306B;&#x3082;&#x3042;&#x308B;&#x7A0B;&#x5EA6;&#x66F8;&#x304F;&#x5FC5;&#x8981;&#x304C;&#x3042;&#x308B;</p>\n\n<p>glsl.js &#x306F;&#x305D;&#x3046;&#x3044;&#x3046;&#x3068;&#x304D;&#x306B;&#x4FBF;&#x5229;&#x3060;&#x3051;&#x3069;&#x5358;&#x306A;&#x308B;&#x4FBF;&#x5229;&#x30E9;&#x30C3;&#x30D1;&#x30FC;&#x306A;&#x306E;&#x3067;&#x51DD;&#x3063;&#x305F;&#x3053;&#x3068;&#x3092;&#x3059;&#x308B;&#x306B;&#x306F;&#x305F;&#x304F;&#x3055;&#x3093;&#x66F8;&#x304B;&#x306A;&#x3051;&#x308C;&#x3070;&#x306A;&#x3089;&#x306A;&#x3044;&#x3002;\n&#x307E;&#x305F; vertex shader &#x306F;&#x56FA;&#x5B9A;&#x3001;fragment shader &#x306E;&#x53D6;&#x308A;&#x6271;&#x3044;&#x306B;&#x6CE8;&#x529B;&#x3057;&#x3066;&#x3044;&#x308B;&#x611F;&#x3058;</p>\n\n<p>MicroGL &#x3082;&#x5358;&#x306A;&#x308B;&#x30E9;&#x30C3;&#x30D1;&#x30FC;&#x306A;&#x306E;&#x3067;&#x3067;&#x304D;&#x308B;&#x3053;&#x3068;&#x306F;&#x5C11;&#x306A;&#x3044;&#x3001;glsl.js &#x3068;&#x30B3;&#x30F3;&#x30BB;&#x30D7;&#x30C8;&#x304C;&#x304B;&#x3076;&#x3063;&#x3066;&#x3044;&#x308B;</p>\n\n<h3>2013/3/28 &#x8FFD;&#x8A18;</h3>\n\n<p>CSS custom filter &#x306B;&#x3088;&#x308B;&#x5B9F;&#x88C5;&#x3082;&#x8FFD;&#x52A0;&#x3057;&#x305F;&#xFF08;Chrome &#x304B;&#x3064; about:flags &#x3067;&#x6709;&#x52B9;&#x306B;&#x3059;&#x308B;&#x5FC5;&#x8981;&#x3042;&#x308A;&#xFF09;&#x3002;\n<code>gl_FragCoord.y</code> &#x304C;&#x9006;&#x306B;&#x306A;&#x308B;&#x3053;&#x3068;&#x306B;&#x6CE8;&#x610F;</p>\n</div>","libraries":[],"js":{"language":"coffeescript","content":"$text = (id) -> document.getElementById(id).textContent\n\nmakeURL = (text, type='text/plain') ->\n  window.URL.createObjectURL new Blob([text], { type })\n\ninitThree = ->\n  uniforms = { time: { type: 'f', value: 0 }}\n  mesh = new THREE.Mesh(\n    new THREE.PlaneGeometry(128, 128, 1, 1),\n    new THREE.ShaderMaterial {\n      uniforms\n      vertexShader: $text('vshader-threejs')\n      fragmentShader: $text('fshader')\n    }\n  )\n  camera = new THREE.PerspectiveCamera(45, 1, 1, 100)\n  scene = new THREE.Scene()\n  scene.add mesh\n  scene.add camera\n  renderer = new THREE.WebGLRenderer()\n  renderer.setSize 128, 128\n  document.body.insertAdjacentHTML 'beforeend', '<div>three.js</div>'\n  document.body.appendChild renderer.domElement\n  (time) ->\n    uniforms.time.value = time\n    renderer.render scene, camera\n\ninitGlsl = ->\n  document.body.insertAdjacentHTML 'beforeend', '<div>glsl.js</div>'\n  canvas = document.createElement 'canvas'\n  canvas.width = canvas.height = 128\n  document.body.appendChild canvas\n  Glsl({\n    canvas\n    fragment: $text('fshader')\n    variables: { time: 0 }\n    update: (time) -> @set 'time', time\n  }).start()\n\ninitMicrogl = ->\n  document.body.insertAdjacentHTML 'beforeend', '<div>MicroGL</div>'\n  gl = new MicroGL()\n    .init(document.body, 128, 128)\n    .program($text('vshader-microgl'), $text('fshader'))\n    .bindVars { position: [0, 0, 0, 1, 1, 0, 1, 1] }\n  (time) ->\n    gl.bindVars({ time }).draw()\n\ninitCSSfilter = ->\n  fshader = makeURL $text('fshader')\n  stylesheet = \"\"\"\n@-webkit-keyframes filter {\n  from { -webkit-filter: custom(none url(#{fshader}), time 0); }\n  to { -webkit-filter: custom(none url(#{fshader}), time 1000000); }\n}\n.filter {\n  width: 128px;\n  height: 128px;\n  -webkit-animation: filter 1000s linear infinite;\n}\n  \"\"\"\n  link = document.createElement 'link'\n  link.href = makeURL stylesheet, 'text/css'\n  link.rel = 'stylesheet'\n  div = document.createElement 'div'\n  div.className = 'filter'\n  document.head.appendChild link\n  document.body.insertAdjacentHTML 'beforeend', '<div>CSS custom filter</div>'\n  document.body.appendChild div\n\nmain = ->\n  updateThree = initThree()\n  initGlsl()\n  updateMicrogl = initMicrogl()\n  initCSSfilter()\n  start = Date.now()\n  do update = ->\n    time = Date.now() - start\n    updateThree time\n    updateMicrogl time\n    requestAnimationFrame update\n\nmain()"},"html":{"language":"html","content":"<script type=\"x-shader/x-vertex\" id=\"vshader-threejs\">\n  void main(){\n    gl_Position = vec4(2.0 * position.xy - 1.0, 0.0, 1.0);\n  }\n</script>\n<script type=\"x-shader/x-vertex\" id=\"vshader-microgl\">\n  attribute vec2 position;\n  void main(){\n    gl_Position = vec4(2.0 * position - vec2(1.0), 0.0, 1.0);\n  }\n</script>\n<script type=\"x-shader/x-fragment\" id=\"fshader\">\n  precision mediump float;\n  uniform float time;\n  uniform vec2 resolution;\n  void main(){\n    gl_FragColor = vec4(\n      0.5 * (cos(time * 0.005) + 1.0),\n      gl_FragCoord.xy / 128.0,\n      1.0\n    );\n  }\n</script>\n<script src=\"http://mrdoob.github.com/three.js/build/three.min.js\">three.js</script>\n<script src=\"http://greweb.fr/glsl.js/glsl.js\">glsl.js</script>\n<script src=\"http://xl1.github.com/microgl/microgl.js\">MicroGL</script>"},"css":{"language":"css","content":""},"published":"2013-03-28T19:01:34"}