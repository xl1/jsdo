{"name":"oXyd","title":"Voronoi diagram","description":"&#x30DC;&#x30ED;&#x30CE;&#x30A4;&#x56F3;<br>\n<a href=\"http://ja.wikipedia.org/wiki/%E3%83%9C%E3%83%AD%E3%83%8E%E3%82%A4%E5%9B%B3\">http://ja.wikipedia.org/wiki/%E3%83%9C%E3%83%AD%E3%83%8E%E3%82%A4%E5%9B%B3</a>","libraries":["/xl1/eHqL"],"js":{"language":"js","content":"(function(){\n\nvar PI2 = Math.PI * 2,\n    NUM_POINTS = 200;\n\nvar gl = new MicroGL();\nif(!gl.enabled) return alert('sorry webgl not supported');\ngl.program($('vshader').textContent, $('fshader').textContent);\n\nvar points = randArray(NUM_POINTS * 2),\n    velocity = randArray(NUM_POINTS * 2),\n    colors = randArray(NUM_POINTS * 3);\n\ngl.bindVars({ aPosition: createCone() });\n\ndocument.addEventListener('DOMContentLoaded', init, false);\n\nfunction init(){\n  gl.init(document.body, 465, 465);\n  requestAnimationFrame(update);\n}\n\nfunction update(){\n  var i = NUM_POINTS,\n      px, py;\n\n  gl.clear();\n  \n  for(; i--;){\n    px = points[i * 2]     += (velocity[i * 2] - 0.5) * 0.01;\n    py = points[i * 2 + 1] += (velocity[i * 2 + 1] - 0.5) * 0.01;\n    gl.bindVars({\n      uPoint: [px, py],\n      uColor: colors.slice(i * 3, (i + 1) * 3)\n    });\n    gl.draw('TRIANGLE_FAN');\n  }\n  requestAnimationFrame(update);\n}\n\nfunction createCone(level){\n  var i = level = level || 90,\n      res = [0, 0, -1, 1, 0, 0],\n      rad;\n  for(; i--;){\n    rad = i * PI2 / level;\n    res.push(Math.cos(rad));\n    res.push(Math.sin(rad));\n    res.push(0);\n  }\n  return res;\n}\n\nfunction randArray(num){\n  var i = num,\n      res = [];\n  for(; i--;){\n    res[i] = Math.random();\n  }\n  return res;\n}\n\nfunction $(i){\n  return document.getElementById(i);\n}\n\n})();"},"html":{"language":"html","content":"<script type=\"text/x-vertex-shader\" id=\"vshader\">\nuniform   vec2 uPoint;\nattribute vec3 aPosition;\nvarying   vec2 vPosition;\n\nvoid main(){\n  gl_Position = vec4(\n    aPosition.xy * 3.0 + mod(uPoint, 1.0) * 2.0 - 1.0,\n    aPosition.z,\n    1.0\n  );\n  vPosition = aPosition.xy;\n}\n</script>\n<script type=\"text/x-fragment-shader\" id=\"fshader\">\nprecision mediump float;\n\nuniform vec3 uColor;\nvarying vec2 vPosition;\n\nvoid main(){\n  if(length(vPosition) < 0.005){\n    gl_FragColor = vec4(1.0);\n  } else {\n    gl_FragColor = vec4(uColor, 1.0);\n  }\n}\n</script>"},"css":{"language":"css","content":"body { margin: 0; overflow: hidden; }"},"published":"2012-01-29T13:58:01"}